$date
	Fri May 27 13:09:07 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tiny_calculator_tb $end
$var wire 7 ! HEX3 [6:0] $end
$var wire 7 " HEX2 [6:0] $end
$var wire 7 # HEX1 [6:0] $end
$var wire 7 $ HEX0 [6:0] $end
$var reg 8 % SW [7:0] $end
$scope module dut $end
$var wire 8 & SW [7:0] $end
$var wire 1 ' inp_carry $end
$var wire 4 ( result [3:0] $end
$var wire 4 ) out_carry [3:0] $end
$var wire 7 * HEX3 [6:0] $end
$var wire 7 + HEX2 [6:0] $end
$var wire 7 , HEX1 [6:0] $end
$var wire 7 - HEX0 [6:0] $end
$scope module dec1 $end
$var wire 4 . i_binary_number [3:0] $end
$var reg 7 / o_display [6:0] $end
$upscope $end
$scope module dec2 $end
$var wire 4 0 i_binary_number [3:0] $end
$var reg 7 1 o_display [6:0] $end
$upscope $end
$scope module dec3 $end
$var wire 4 2 i_binary_number [3:0] $end
$var reg 7 3 o_display [6:0] $end
$upscope $end
$scope module dec4 $end
$var wire 4 4 i_binary_number [3:0] $end
$var reg 7 5 o_display [6:0] $end
$upscope $end
$scope module rca $end
$var wire 4 6 i_a [3:0] $end
$var wire 4 7 i_b [3:0] $end
$var wire 1 ' i_carry_in $end
$var wire 4 8 o_s [3:0] $end
$var wire 1 9 o_carry_out $end
$var wire 1 : l_carry_3 $end
$var wire 1 ; l_carry_2 $end
$var wire 1 < l_carry_1 $end
$scope module adder_0 $end
$var wire 1 = i_a $end
$var wire 1 > i_b $end
$var wire 1 ' i_carry_in $end
$var wire 1 < o_carry_out $end
$var wire 1 ? o_s $end
$upscope $end
$scope module adder_1 $end
$var wire 1 @ i_a $end
$var wire 1 A i_b $end
$var wire 1 < i_carry_in $end
$var wire 1 ; o_carry_out $end
$var wire 1 B o_s $end
$upscope $end
$scope module adder_2 $end
$var wire 1 C i_a $end
$var wire 1 D i_b $end
$var wire 1 ; i_carry_in $end
$var wire 1 : o_carry_out $end
$var wire 1 E o_s $end
$upscope $end
$scope module adder_3 $end
$var wire 1 F i_a $end
$var wire 1 G i_b $end
$var wire 1 : i_carry_in $end
$var wire 1 9 o_carry_out $end
$var wire 1 H o_s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
b0 8
b0 7
b0 6
b1000000 5
b0 4
b1000000 3
b0 2
b1000000 1
b0 0
b1000000 /
b0 .
b1000000 -
b1000000 ,
b1000000 +
b1000000 *
b0 )
b0 (
0'
b0 &
b0 %
b1000000 $
b1000000 #
b1000000 "
b1000000 !
$end
#10
1E
b10010 "
b10010 +
b10010 3
1;
b101 (
b101 2
b101 8
1?
b100100 #
b100100 ,
b100100 1
1A
b110000 $
b110000 -
b110000 /
1=
1@
b10 0
b10 7
b11 .
b11 6
b100011 %
b100011 &
#20
1H
1<
1;
b0 "
b0 +
b0 3
1:
0?
0B
b1000 (
b1000 2
b1000 8
0E
b1111001 #
b1111001 ,
b1111001 1
1>
0A
b1111000 $
b1111000 -
b1111000 /
1C
b1 0
b1 7
b111 .
b111 6
b10111 %
b10111 &
#30
0H
b1111001 !
b1111001 *
b1111001 5
0<
0;
b1000000 "
b1000000 +
b1000000 3
0:
b1 )
b1 4
19
0B
b0 (
b0 2
b0 8
0E
b0 #
b0 ,
b0 1
0>
1G
b0 $
b0 -
b0 /
0=
0@
0C
1F
b1000 0
b1000 7
b1000 .
b1000 6
b10001000 %
b10001000 &
#40
b110 "
b110 +
b110 3
1B
1E
b1110 (
b1110 2
b1110 8
1H
1<
1;
1:
b1110 #
b1110 ,
b1110 1
1>
1A
1D
b1110 $
b1110 -
b1110 /
1=
1@
1C
b1111 0
b1111 7
b1111 .
b1111 6
b11111111 %
b11111111 &
#50
